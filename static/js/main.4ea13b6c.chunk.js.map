{"version":3,"sources":["components/Home/home.module.css","components/Detail/detail.module.css","components/CreatePoke/createPoke.module.css","components/Card/card.module.css","components/SearchBar/search.module.css","components/LandingPage/landing.module.css","components/Pagination/pagination.module.css","components/LandingPage/landing.jsx","actions/index.js","components/Card/Card.jsx","components/Pagination/Pagination.jsx","assets/icons8-search.svg","components/SearchBar/SearchBar.jsx","assets/Error pokemon.svg","assets/icons8-refresh.svg","components/Home/Home.jsx","components/CreatePoke/createPoke.jsx","components/Detail/detail.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["module","exports","LandingPage","className","styles","wrapper","landing","to","getPokemon","dispatch","axios","pokemon","type","payload","data","console","log","getPokeType","pokeType","Card","name","img","id","types","attack","createdInDb","cards","pokemons","imageContainer","pokeImage","src","alt","tipos","Pagination","pokemonPerPage","allPokemon","paging","pageNumbers","i","Math","ceil","push","pagination","map","number","btn","onClick","SearchBar","useDispatch","useState","setName","handleSubmit","e","preventDefault","get","pokNam","alert","getType","searchInput","placeholder","onKeyDown","key","handleKeyDown","value","onChange","target","handleInputChange","lupita","imgLupa","logo","Home","setState","useSelector","state","allTypes","currentPage","setCurrentPage","indexLastPoke","indexFirstPoke","currentPoke","slice","useEffect","cardContainer","createpoke","handleClick","recarga","selectAttack","handleByAttack","card","length","image","logo2","c","cardFormat","selectTipos","handleByType","selectApi","handleFilter","pageNumber","searchB","emptinessIKM","valuableName","forNumber","forUrl","CreatePoke","a","errors","setErrors","history","useHistory","life","weight","height","speed","defense","input","setInput","handleChange","test","parseInt","validated","post","container","btnLoad","createPoke","form","onSubmit","boxes","names","inputBox","forP","selectTipo","includes","Object","keys","btonCrearD","disabled","btonCrear","typesContainer","delete","filter","element","handleDelete","Detail","pokeDeits","details","useParams","idPoke","getId","detalleBackground","botones","detalleBtn","imgCard","detailName","imagen","stats","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allPokemons","rootReducer","action","allPokemones","statusFiltered","el","typ","allPokesRevenge","filter2","ele","sort","b","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ea13b6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"home_cardContainer__749iB\",\"createpoke\":\"home_createpoke__1pLQT\",\"recarga\":\"home_recarga__3nkOz\",\"selectAttack\":\"home_selectAttack__SxVB-\",\"card\":\"home_card__gHPRf\",\"selectTipos\":\"home_selectTipos__DGdG0\",\"selectApi\":\"home_selectApi__tHC9q\",\"searchB\":\"home_searchB__2QbiQ\",\"pagination\":\"home_pagination__2SNJh\",\"name\":\"home_name__24JcA\",\"tipos\":\"home_tipos__3j-dm\",\"noPokes\":\"home_noPokes__2JTnV\",\"image\":\"home_image__33xbu\",\"cardFormat\":\"home_cardFormat__1XXkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detalleBtn\":\"detail_detalleBtn__1PAnL\",\"detalleBackground\":\"detail_detalleBackground__2oSUs\",\"imgCard\":\"detail_imgCard__1ub66\",\"imagen\":\"detail_imagen__2n_xI\",\"stats\":\"detail_stats__3kG31\",\"botones\":\"detail_botones__2tF8F\",\"detailName\":\"detail_detailName__2cU-3\",\"tipos\":\"detail_tipos__3GJsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"createPoke_container__2vN8P\",\"btnLoad\":\"createPoke_btnLoad__KNY-j\",\"createPoke\":\"createPoke_createPoke__Yu6vA\",\"form\":\"createPoke_form__2DfUi\",\"boxes\":\"createPoke_boxes__io8yM\",\"forP\":\"createPoke_forP__2Ib9Z\",\"selectTipo\":\"createPoke_selectTipo__nAzbn\",\"btonCrear\":\"createPoke_btonCrear__2dBUr\",\"btonCrearD\":\"createPoke_btonCrearD__vGW-D\",\"names\":\"createPoke_names__1Q1fb\",\"inputBox\":\"createPoke_inputBox__3ewO1\",\"typesContainer\":\"createPoke_typesContainer__21m3W\",\"delete\":\"createPoke_delete__Dve-A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"card_cards__12MZs\",\"pokemons\":\"card_pokemons__16XnU\",\"imageContainer\":\"card_imageContainer__1lfpU\",\"pokeImage\":\"card_pokeImage__1WJbl\",\"types\":\"card_types__28hct\",\"tipos\":\"card_tipos__FT3ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"search_searchInput__3BPj1\",\"lupita\":\"search_lupita__2DR2T\",\"imgLupa\":\"search_imgLupa__3viM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"landing_wrapper__1a295\",\"landing\":\"landing_landing__2ODdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__n8UHx\",\"btn\":\"pagination_btn__32V0R\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './landing.module.css' ;\r\nexport default function LandingPage() {\r\n  return (\r\n      <div className={styles.wrapper}>\r\n    <div className={styles.landing}>\r\n      \r\n      <h1>Henry PokeApp</h1>\r\n      <Link to=\"/home\">\r\n        <button className='btn-all'>Ingresar</button>\r\n      </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","  import axios from 'axios';\r\n//const axios = require( 'axios')\r\n\r\n\r\n//variables de action types\r\n/* export const GET_POKE = \"GET_POKE\"\r\nexport const ORDER_ATTACK_POKE = \"ORDER_ATTACK_POKE\"\r\nexport const ORDER_BY_TYPE = \"ORDER_BY_TYPE\" */\r\n\r\n// redux thunk sirve para trabajar con la llamada asincrona \r\n\r\nexport function getPokemon() {\r\n  return async (dispatch) => {\r\n      try {\r\n          var pokemon = await axios('http://localhost:3001/pokemons');\r\n          return dispatch({\r\n              type: \"GET_POKEMON\",\r\n              payload: pokemon.data\r\n              //representado en sservice el payload state.somethingneeded = payload.somethinneeded\r\n          })\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n\r\n  }\r\n}\r\nexport function orderBy (payload){\r\n  return {\r\n\r\n    type: \"ORDER_ATTACK_POKE\",\r\n    payload\r\n  }\r\n\r\n}\r\n\r\nexport function orderByType (payload){\r\n  return {\r\n      type: \"ORDER_BY_TYPE\",\r\n      payload\r\n\r\n  }\r\n}\r\n\r\nexport function getPokeType (){\r\n  return async(dispatch) => {\r\n    try {\r\n      let pokeType = await axios('http://localhost:3001/types');\r\n      return dispatch ({\r\n          type: \"GET_TYPES\",\r\n          payload: pokeType.data\r\n      })\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n}\r\n// checking // done 26/8\r\n export function getName(name){\r\n  return async(dispatch) => {\r\n    try {\r\n      const pokNam = await axios.get(\"http://localhost:3001/pokemons?name=\" + name) \r\n       \r\n\r\n      return dispatch ({\r\n        type: \"GET_NAME\",\r\n        payload: pokNam.data\r\n      })\r\n    } catch (error) {\r\n         /* console.log(error)\r\n         return dispatch({\r\n          type: \"GET_NAME\",\r\n          payload: ['Pokemon']\r\n         }) */ \r\n         alert('nombre Completo')   \r\n    }\r\n  }\r\n}\r\n\r\nexport function getType(name){\r\n  return async(dispatch) => {\r\n    try {\r\n      const pokNam = await axios.get(\"http://localhost:3001/pokemons?type=\" + name) \r\n       \r\n\r\n      return dispatch ({\r\n        type: \"GET_TYPE\",\r\n        payload: pokNam.data\r\n      })\r\n    } catch (error) {\r\n         /* console.log(error)\r\n         return dispatch({\r\n          type: \"GET_NAME\",\r\n          payload: ['Pokemon']\r\n         }) */ \r\n         alert('nombre Completo')   \r\n    }\r\n  }\r\n}\r\n\r\n\r\n//it works\r\nexport function getId(id){\r\n return async function (dispatch){\r\n  try {\r\n    const idPoke = await axios(\"http://localhost:3001/pokemons/\" + id)\r\n    return dispatch({\r\n      type: \"GET_ID\", \r\n      payload: idPoke.data\r\n    })\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n }\r\n}\r\n\r\n//working\r\nexport function postPoke(payload){\r\n  return async function(dispatch){\r\n    //le paso un payload tambien a la ruta \r\n    const post = await axios.post(\"http://localhost:3001/pokemons\", payload)\r\n    return dispatch({\r\n      type: \"POST_POKEMON\",\r\n      payload: post\r\n    })\r\n  } \r\n}\r\n\r\n//created in database\r\n export function filterDb(payload){\r\n\r\n  return {\r\n    type: \"FILTER_DB\",\r\n    payload\r\n  }\r\n }\r\n\r\n //this one works \r\n export function restorePoke(payload){\r\n    return {\r\n      type: \"RESTORE_POKE\",\r\n      payload\r\n    }\r\n\r\n }","import React from \"react\";\r\nimport styles from \"./card.module.css\";\r\n\r\nexport default function Card({ name, img, id, types, createdInDb, attack }) {\r\n  return (\r\n    <div className={styles.cards}>\r\n      <div className={styles.pokemons}>\r\n        <div>\r\n          <h3>{name}</h3>\r\n          <h3> {id}</h3>\r\n\r\n        </div>\r\n        <div className={styles.imageContainer}>\r\n          <img\r\n            className={styles.pokeImage}\r\n            src={img}\r\n            alt=\"\"\r\n          \r\n          />\r\n        </div>\r\n        <div> {attack}</div>\r\n        <div>\r\n          {/* dentro de la primera posicion, 0, tenemos un tipo con su nombre y dentro del 1 otro */}\r\n          <div className={styles.tipos}>\r\n            <h4>{types && types[0].name} {types && types[1] && types[1].name}</h4>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from './pagination.module.css'\r\n//pasamos por destructuring lo que necesitamos\r\n\r\n//it works\r\n\r\nexport default function Pagination({\r\n  \r\n  pokemonPerPage,\r\n  allPokemon,\r\n  paging,\r\n}) {\r\n  const pageNumbers = [];\r\n\r\n  //math ceil redondea hacia arriba los pokes sobre la cantidad de pokes que se quiere\r\n  // con el resultado del numero redondo de los pokemones por los que quiero y lo pusheamos en el array\r\n  for (let i = 1; i <= Math.ceil(allPokemon/pokemonPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    //necesitamos devolver el numero que corresponda.\r\n    //dentro de la lista revisamos si pageNumbers tiene contenido.\r\n    //cuando hacemos click le pasamos el paging que contiene el numero de pagina\r\n    <nav className={styles.pagination}>\r\n      \r\n        {pageNumbers?.map((number) => (\r\n         <div className=\"number\" key={number}>\r\n                     <button className={styles.btn} onClick={() => paging(number)}>{number}</button>\r\n          \r\n          </div>\r\n        ))\r\n        }\r\n      \r\n    </nav>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icons8-search.5b5a18e8.svg\";","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getName, getType } from \"../../actions\";\r\nimport styles from \"./search.module.css\";\r\nimport logo from \"../../assets/icons8-search.svg\";\r\nexport default function SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleInputChange(e) {\r\n    e.preventDefault();\r\n    setName(e.target.value);\r\n   \r\n  }\r\n\r\n  function handleKeyDown(e){\r\n    if (e.key === \"Enter\"){\r\n      handleSubmit(e);\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (name) {\r\n      dispatch(getType(name));\r\n    }\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className={styles.searchInput}\r\n        type=\"text\"\r\n        placeholder=\"Busca Pokemons\"\r\n        onKeyDown={ (e) => {handleKeyDown(e)}}\r\n        value={name}\r\n        onChange={(e) => {\r\n          handleInputChange(e);\r\n        }}\r\n      />\r\n      <button\r\n        className={styles.lupita}\r\n        type=\"submit\"\r\n        value={name}\r\n        onClick={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n      >\r\n        <img className={styles.imgLupa} src={logo} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Error pokemon.00a74718.svg\";","export default __webpack_public_path__ + \"static/media/icons8-refresh.91424661.svg\";","import React, { Fragment } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getPokemon,\r\n  orderBy,\r\n  orderByType,\r\n  getPokeType,\r\n  filterDb,\r\n} from \"../../actions/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../Card/Card\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport styles from \"./home.module.css\";\r\nimport logo from \"../../assets/icons8-refresh.svg\";\r\nimport logo2 from \"../../assets/Error pokemon.svg\";\r\nexport default function Home() {\r\n  //para hacer el dispatch de las acciones\r\n\r\n  const dispatch = useDispatch();\r\n  //seteamos un estado para poder hacer el refresh de la accion que necesitamos en el select\r\n  const [state, setState] = useState(\"\");\r\n  //para manipular los states\r\n  const allPokemon = useSelector((state) => state.pokemons);\r\n  console.log(allPokemon);\r\n  //allpokemons2 = useSelector ((state) => state.allPokemons)\r\n  const allTypes = useSelector((state) => state.types);\r\n\r\n  // Creamos un state con la pagina actual y otro que haga set\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pokemonPerPage, setPokemonPerPage] = useState(12); //asi mostramos 12 por pagina\r\n  const indexLastPoke = currentPage * pokemonPerPage;\r\n  const indexFirstPoke = indexLastPoke - pokemonPerPage;\r\n  //para marcar la distancia el slice parte a la mitad.\r\n  const currentPoke = allPokemon.slice(indexFirstPoke, indexLastPoke);\r\n  //para setear la pagina en ese numero de pagina. Helps with rendering\r\n  const paging = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // se va a ejecutar cada vez que ocurra dispatch como en el did mount >// vacio no depende de nada\r\n  useEffect(() => {\r\n    dispatch(getPokemon());\r\n    dispatch(getPokeType());\r\n  }, [dispatch]); //otherwise loop\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault(); // para que no se rompa. Just in case.\r\n    dispatch(getPokemon());\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  function handleByAttack(e) {\r\n    e.preventDefault(); // para que no se rompa. Just in case.\r\n    dispatch(orderBy(e.target.value));\r\n    setState(e.target.value);\r\n    setCurrentPage(1);\r\n    /* dispatch(getPokemon()); */\r\n  }\r\n\r\n  function handleByType(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByType(e.target.value));\r\n    setCurrentPage(1);\r\n    //setState(e.target.value)\r\n  }\r\n  /*  function handleByName(e) {\r\n    e.preventDefault(); // para que no se rompa. Just in case.\r\n    dispatch();\r\n  } */\r\n\r\n  function handleFilter(e) {\r\n    dispatch(filterDb(e.target.value));\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cardContainer}>\r\n      <Link to=\"/createpokemon\" className={styles.createpoke}>\r\n        <h3> Crea nuevos Pokemons! +</h3>\r\n      </Link>\r\n      <button\r\n        onClick={(e) => {\r\n          handleClick(e);\r\n        }}\r\n        className={styles.recarga}\r\n      >\r\n        Recarga\r\n      </button>\r\n      <div>\r\n        <select\r\n          className={styles.selectAttack}\r\n          onChange={(e) => handleByAttack(e)}\r\n        >\r\n          <option>Ordenar alfabeticamente</option>\r\n          <option value=\"ascendente\">A-Z</option>\r\n          <option value=\"descendente\">Z-A</option>\r\n          <option> Ordenar Por Ataque</option>\r\n          <option value=\"mayor\">+ ataque</option>\r\n          <option value=\"menor\">- ataque</option>\r\n        </select>\r\n      </div>\r\n      {/* cambiamos a current */}\r\n      <div className={styles.card}>\r\n        {/* cambiamos al current para que aparezcan los que quiero */}\r\n        {currentPoke.length === 0 ? (\r\n          <img\r\n            className={styles.image}\r\n            src={logo2}\r\n            alt=\"No hay pokemones\"\r\n          ></img>\r\n        ) : (\r\n          currentPoke.map((c) => {\r\n            return (\r\n              <div className={styles.cardFormat} key={c.id}>\r\n                <Link className={styles.name} to={\"/home\" + c.id}>\r\n                  <Card\r\n                    name={c.name}\r\n                    img={c.img}\r\n                    types={c.types}\r\n                    attack={c.attack}\r\n                  />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n\r\n        {/*    {console.log(currentPoke)} */}\r\n      </div>\r\n\r\n      <select className={styles.selectTipos} onChange={(e) => handleByType(e)}>\r\n        <option className={styles.tipos} value=\"All\">\r\n          Tipos de pokemon\r\n        </option>\r\n        {allTypes.map((type) => (\r\n          <option value={type.name} key={type.name}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select className={styles.selectApi} onChange={(e) => handleFilter(e)}>\r\n        <option value=\"All\">Api / Creados</option>\r\n        <option value=\"api\">api</option>\r\n        <option value=\"Created\">Created</option>\r\n      </select>\r\n\r\n      {/* le pasamos el length porque necesitamos numeros */}\r\n      <div className={styles.pagination}>\r\n        <Pagination\r\n          pokemonPerPage={pokemonPerPage}\r\n          allPokemon={allPokemon.length}\r\n          paging={paging}\r\n        />\r\n      </div>\r\n      <div className={styles.searchB}>\r\n        <SearchBar />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// falta el select de api y created in db. Just that y estilos\r\n\r\n//los creados no entran el el filter y no se acomodan alfabeticamente.\r\n// los tipos que no estan me traen 0 a la pagina 1 ---> se resolvio agregando la imagen. No se renderizaba bien el contenido por pagina tampoco\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getId, postPoke, getPokeType } from \"../../actions\";\r\nimport styles from './createPoke.module.css';\r\n//necesito validar cada uno de los input con regular expressions\r\n    let emptinessIKM = /\\S+/;\r\n    let valuableName =  /^[a-z]+$/i;\r\n    let forNumber =  /^\\d+$/;\r\n    let forUrl = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n\r\nfunction validated(input){\r\n    let errors = {}\r\n    if (!emptinessIKM.test(input.name) || !valuableName.test(input.name) || input.name.length < 4){\r\n        errors.name = \"Mas de 3 caracteres. Sin numeros\"\r\n\r\n    } // parseInt to return integer \r\n    if (!forNumber.test(input.life) || parseInt(input.life) <= 1 || parseInt(input.life) >= 300  ){\r\n        errors.life = 'Mas de 1 por favor y menor a 300'\r\n    }  \r\n    \r\n    if(!forNumber.test(input.attack) || parseInt(input.attack) <= 1 || parseInt(input.attack) >= 300 ){\r\n        errors.attack = 'Mas de 1 por favor y menor a 300'\r\n    }\r\n    \r\n    if(!forNumber.test(input.defense) || parseInt(input.defense) <=1  || parseInt(input.defense) >= 300){\r\n        errors.defense = 'Mas de 1 por favor y menor a 300'\r\n    }\r\n\r\n    \r\n    if(!forNumber.test(input.speed) || parseInt(input.speed) <=1 || parseInt(input.speed) >= 300 ){\r\n        errors.speed = 'Mas de 1 por favor y menor a 300'\r\n    }\r\n    \r\n    if(!forNumber.test(input.height) || parseInt(input.height) <=1  || parseInt(input.height) >= 250){\r\n        errors.height = 'Mas de 1 por favor y menor a 250. '\r\n    }\r\n    \r\n    if(!forNumber.test(input.weight) || parseInt(input.weight) <= 1 || parseInt(input.weight) >= 1000 ){\r\n        errors.weight = 'Mas de 1 por favor y menor a 1000'\r\n    }\r\n\r\n    if (!forUrl.test(input.img)){\r\n        errors.img = 'Es necesaria una URL'\r\n    }\r\n    return errors\r\n}\r\n\r\n/* The test() method is a RegExp expression method.\r\n\r\nIt searches a string for a pattern, and returns true or false, depending on the result */\r\n\r\n\r\nexport default function CreatePoke() {\r\n  const dispatch = useDispatch();\r\n  const types = useSelector((state) => state.types);\r\n  // si el state de errors estaba vacio, nunca iba a entrar a los errores\r\n  const [errors, setErrors] = useState({a: \"\"})\r\n  //const allpoke3 = useSelector((state) => state.allpokemons.map(pok => pok.name))\r\n\r\n  //redirigimos con history push a la ruta que indiquemos\r\n  const history = useHistory();\r\n\r\n  //para guardar el form, y en un objeto le pasamos lo necesario para el post\r\n  // input equals local state, obviously\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    life: \"\",\r\n    weight: \"\",\r\n    height: \"\",\r\n    speed: \"\",\r\n    attack: \"\",\r\n    defense: \"\",\r\n    img: \"\",\r\n    // para que se puedan cargar más de un type.\r\n    types: [],\r\n  });\r\n  //para agregar ademas del input agrega un target value de lo que se esté modificando\r\n  function handleChange(e) {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    /* console.log(input); */\r\n    setErrors(validated({\r\n        ...input,\r\n        [e.target.name]: e.target.value\r\n    }))\r\n  } \r\n\r\n  function handleSelect(e) {\r\n    e.preventDefault();\r\n    //working here so we can choose up to two types, don't know if it works tho\r\n    input.types.length < 2 && !input.types.includes(e.target.value) \r\n      ? setInput({\r\n          ...input,\r\n          types: [...input.types, e.target.value],\r\n        })\r\n      : alert(\"Hasta dos tipos!!\");\r\n  }\r\n  //probamos un handleDelete para eliminar tipos. It really works!!\r\n  function handleDelete(e) {\r\n    setInput({\r\n      ...input,\r\n      types: input.types.filter((element) => element !== e),\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    \r\n    if (\r\n        !errors.name &&\r\n        !errors.life &&\r\n        !errors.attack &&\r\n        !errors.defense &&\r\n        !errors.speed &&\r\n        !errors.height &&\r\n        !errors.weight &&\r\n        !errors.img \r\n       /*  !errors.types */\r\n    ) {\r\n\r\n\r\n    //vamos a ver el input\r\n    dispatch(postPoke(input))\r\n    alert('pokemon creado exitosamente')\r\n    setInput({\r\n        name: \"\",\r\n        life: \"\",\r\n        weight: \"\",\r\n        height: \"\",\r\n        speed: \"\",\r\n        attack: \"\",\r\n        defense: \"\",\r\n        img: \"\",\r\n        // para que se puedan cargar más de un type.\r\n        types: [],\r\n    })\r\n    history.push('/home')\r\n} else{\r\n    alert('revisa el formulario, por favor')\r\n}\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokeType());\r\n  }, [dispatch]);\r\n  //los input tienen que tener id? gran pregunta\r\n  return ( \r\n    <div className={styles.container}>\r\n      <Link  to=\"/home\">\r\n        <button className={styles.btnLoad}> Regresa a ver todos los pokemons</button>\r\n      </Link>\r\n      <h2 className={styles.createPoke}> Crea tu pokemon!</h2>\r\n\r\n      <form  className={styles.form} onSubmit={(e)=> handleSubmit(e)}>\r\n      <div>\r\n        <div className={styles.boxes} >\r\n          <label className={styles.names}>Name: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"text\"\r\n            value={input.name}\r\n            name=\"name\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n         {/* renderizamos el error que pusimos en la funcion */}\r\n           {errors.name && (\r\n                        <p className={styles.forP}>{errors.name}</p>\r\n                    )}\r\n        </div>\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names}>Life:  </label>\r\n          <input className={styles.inputBox}\r\n            type=\"number\"\r\n            value={input.life}\r\n            name=\"life\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n           {errors.life && (\r\n                        <p className={styles.forP}>{errors.life}</p>\r\n                    )}\r\n        </div>\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names}>Attack: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"number\"\r\n            value={input.attack}\r\n            name=\"attack\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n           {errors.attack && (\r\n                        <p className={styles.forP}>{errors.attack}</p>\r\n                    )}\r\n\r\n        </div>\r\n\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names}>Defense: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"number\"\r\n            value={input.defense}\r\n            name=\"defense\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n           {errors.defense && (\r\n                        <p className={styles.forP}>{errors.defense\r\n                        }</p>\r\n                    )}\r\n        </div>\r\n\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names} >Speed: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"number\"\r\n            value={input.speed}\r\n            name=\"speed\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n           {errors.speed && (\r\n                        <p  className={styles.forP}>{errors.speed}</p>\r\n                    )}\r\n        </div>\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names}>Weight: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"number\"\r\n            value={input.weight}\r\n            name=\"weight\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n           {errors.weight && (\r\n                        <p className={styles.forP}>{errors.weight}</p>\r\n                    )}\r\n        </div>\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names}>Height: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"number\"\r\n            value={input.height}\r\n            name=\"height\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n           {errors.height && (\r\n                        <p className={styles.forP}>{errors.height}</p>\r\n                    )}\r\n        </div>\r\n\r\n        <div className={styles.boxes}>\r\n          <label className={styles.names}>Image: </label>\r\n          <input className={styles.inputBox}\r\n            type=\"text\"\r\n            value={input.img}\r\n            name=\"img\"\r\n            onChange={(e) => handleChange(e)}\r\n            placeholder=\" URL...\"\r\n          />\r\n          {errors.img && (\r\n                        <p className={styles.forP}>{errors.img}</p>\r\n                    )}\r\n        </div>\r\n        </div>\r\n        {/* //vamos a seleccionar los tipos */}\r\n        <select className={styles.selectTipo} onChange={handleSelect}>\r\n          <option>Selecciona Tipo: </option>\r\n          {types?.map((e) => {\r\n            return (\r\n              <option key={e.id} value={e.name}>\r\n                {e.name}\r\n              </option>\r\n            );\r\n          })} \r\n        </select>\r\n        <div>\r\n          {/* // para ver lo que se selecciona, i think */}\r\n         {/*  <ul>\r\n            <li>{input.types.map((el) => el + \" ,\")}</li>\r\n          </ul> */}\r\n          <div>\r\n          { Object.keys(errors).length ?<button className={styles.btonCrearD}  type=\"submit\" disabled/* !input.types.length} */ >Crear </button>  \r\n             : <button className={styles.btonCrear} type=\"submit\" disabled={!input.types.length} >Crear </button>             \r\n             \r\n            } \r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div className={styles.typesContainer}>\r\n          {/* probamos un input map para borrar */}\r\n          {input.types.map((e) => (\r\n            <div >\r\n              <h4>{e}</h4>\r\n              <button className={styles.delete} type=\"reset\" onClick={() => handleDelete(e)} value=\"x\">\r\n                X\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n//work on handle submit, then validations, then check if it works, then detail or pagination and then testing. Afterwards study and have things ready..\r\n//check for more validations so we cant add more than 200 in values\r\n\r\n/* \r\nimport React, { useState } from \"react\";\r\nimport { useAuth } from \"../firebase/context.jsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addUser, getUserByEmail } from \"../../redux/actions/index.js\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const Register = () => {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { signUp } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setUser({ ...user, [name]: value });\r\n    console.log(name, value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (\r\n        validateMail(user.email) &&\r\n        validateUserName(user.username) &&\r\n        validatePassword(user.password)\r\n      ) {\r\n        if (handlePass()) {\r\n          setError(\"\");\r\n\r\n          await signUp(user.email, user.password);\r\n\r\n          dispatch(\r\n            addUser({\r\n              email: user.email,\r\n              password: user.password,\r\n              username: user.username,\r\n            })\r\n          ).then(() => {\r\n            navigate(\"/Login\");\r\n          });\r\n        } else {\r\n          setError(\"Passwords do not match\");\r\n        }\r\n      } else {\r\n        throw new Error (\"incorrect data\")\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handlePass = () => {\r\n    if (user.password !== user.confirmPassword) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  function validateMail(email) {\r\n    return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      email\r\n    );\r\n  }\r\n  function validatePassword(password) {\r\n    return /^(?=[^a-z]*[a-z])(?=\\D*\\d)[^:&.~\\s]{5,20}$/.test(password);\r\n  }\r\n\r\n  function validateUserName(userName) {\r\n    return /^[a-z][^\\W_]{7,14}$/i.test(userName);\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-primary flex flex-col justify-center items-center mt-8\">\r\n      <form onSubmit={handleSubmit} className=\"w-96 space-y-2\">\r\n        <div>{error && <p>{error}</p>}</div>\r\n        <h2 className=\"text-2xl\">Sign Up</h2>\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"flex pt-4 pb-2 space-x-1\">\r\n            <i className=\"material-icons\">mail_outline</i>\r\n            <label htmlFor=\"email\">Email</label>\r\n          </div>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email@example.com\"\r\n            onChange={handleChange}\r\n            className=\"rounded-lg ring-secondary focus:border-secondary focus:ring-secondary\"\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"flex pt-4 pb-2 space-x-1\">\r\n            <i className=\"material-icons\">person_outline</i>\r\n            <label htmlFor=\"username\">Username</label>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            onChange={handleChange}\r\n            className=\"rounded-lg ring-secondary focus:border-secondary focus:ring-secondary\"\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"flex pt-4 pb-2 space-x-1\">\r\n            <i className=\"material-icons\">lock_open</i>\r\n            <label htmlFor=\"password\">Password</label>\r\n          </div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={handleChange}\r\n            className=\"rounded-lg ring-secondary focus:border-secondary focus:ring-secondary\"\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"flex pt-4 pb-2 space-x-1\">\r\n            <i className=\"material-icons\">lock_outline</i>\r\n            <label>Confirm Password</label>\r\n          </div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            id=\"confirmPassword\"\r\n            placeholder=\"Confirm your password\"\r\n            onChange={handleChange}\r\n            className=\"rounded-lg ring-secondary focus:border-secondary focus:ring-secondary\"\r\n          />\r\n        </div>\r\n        <p className=\"py-4\">\r\n          By signing up, you agree to our{\" \"}\r\n          <span className=\"text-secondary cursor-pointer\">\r\n            Terms and Conditions\r\n          </span>{\" \"}\r\n          and{\" \"}\r\n          <span className=\"text-secondary cursor-pointer\">Privacy Policy</span>\r\n        </p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-secondary w-full h-11 rounded-lg text-white font-bold cursor-pointer\"\r\n        >\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}; */","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getId, restorePoke } from \"../../actions\";\r\nimport styles from './detail.module.css';\r\nexport default function Detail() {\r\n  const dispatch = useDispatch();\r\n  const pokeDeits = useSelector((state) => state.details);\r\n  const { id } = useParams();\r\n  // Tengo que crear una accion para que no me cargue por error otra imagen previamente\r\n  useEffect(() => {\r\n    //para acceder al id de ese pokemoncito. tambien se podia un useParams.\r\n    dispatch(getId(id));\r\n    dispatch(restorePoke());\r\n  }, [dispatch, id]);\r\n\r\n /*  console.log(pokeDeits); */\r\n  return (\r\n    <div className={styles.detalleBackground}>\r\n      <button className={styles.botones}>\r\n        <Link className={styles.detalleBtn} to=\"/createpokemon\">Back to create pokes</Link>\r\n      </button>\r\n\r\n      <button className={styles.botones}>\r\n        <Link className={styles.detalleBtn} to=\"/home\">back to pokes</Link>\r\n      </button>\r\n\r\n      <div className={styles.imgCard}>\r\n        {/* object keys te devuelve tremendo array que sirve porque numbers */}\r\n        {Object.keys(pokeDeits).length > 0 ? (\r\n          <div >\r\n            <div >\r\n              <h4 className={styles.detailName}>{pokeDeits[0].name}</h4>\r\n            </div>\r\n            <div >\r\n              <img className={styles.imagen} src={pokeDeits[0].img} alt=\"\" />\r\n            </div>\r\n            <div>\r\n              <div >\r\n                <span className={styles.detailName}>Tipos:</span>  {/* ya no hay problemas */}\r\n                <div className={styles.tipos}>\r\n                {pokeDeits[0].types[0].name} {pokeDeits[0].types[1] && pokeDeits[0].types[1].name}\r\n                </div>\r\n              </div>\r\n              <div className={styles.stats}>\r\n              <span>Id: {pokeDeits[0].id}</span>\r\n              <span>Life: {pokeDeits[0].life}</span>\r\n              <span>Ataque: {pokeDeits[0].attack}</span>\r\n              <span>Defensa: {pokeDeits[0].defense}</span>\r\n              <span>Velocidad: {pokeDeits[0].speed}</span>\r\n              <span>Altura: {pokeDeits[0].height}</span>\r\n              <span>Peso: {pokeDeits[0].weight}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p> Almost there</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport LandingPage from './components/LandingPage/landing';\nimport Home from './components/Home/Home';\nimport CreatePoke from './components/CreatePoke/createPoke';\nimport details from './components/Detail/detail';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route exact path= '/' component= {LandingPage}/>\n        <Route path ='/home' component= {Home}/>\n        <Route path = '/createpokemon' component= {CreatePoke}/>\n        <Route path = '/home:id' component={details} />\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//importamos las action types\r\n\r\nconst initialState = {\r\n  //pokemons was {}\r\n  pokemons: [],\r\n  allPokemons: [],\r\n  types: [],\r\n  //para ids\r\n  details: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_TYPES\":\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n    case \"ORDER_BY_TYPE\":\r\n      const allPokemones = state.allPokemons;\r\n      const statusFiltered =\r\n        action.payload === \"All\"\r\n          ? allPokemones\r\n          : allPokemones.filter((el) => el.types.map(typ => typ.name).includes(action.payload));\r\n\r\n      return {\r\n        ...state,\r\n        pokemons: statusFiltered \r\n      };\r\n    //Its working\r\n    case \"GET_NAME\":\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n      case \"GET_TYPE\": \r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      }\r\n    //check this later too\r\n    case \"GET_ID\":\r\n      return {\r\n        ...state,\r\n        // iba a ponerle id pero por las dudas algo ya se llame id y crashee\r\n        details: action.payload,\r\n      };\r\n    //check this as well\r\n    case \"POST_POKEMON\":\r\n      return {\r\n        ...state,\r\n      };\r\n    //check this\r\n    case \"FILTER_DB\":\r\n       const allPokesRevenge = state.allPokemons;\r\n      /*  console.log(action.payload); */\r\n      const filter2 =\r\n        action.payload === \"Created\"\r\n          ? allPokesRevenge.filter((ele) => ele.createdInDb)\r\n          : allPokesRevenge.filter((ele) => !ele.createdInDb);\r\n      return {\r\n        ...state,\r\n        pokemons:\r\n          action.payload === \"All\"\r\n            ? allPokesRevenge\r\n            : filter2.length\r\n            ? filter2\r\n            : [],\r\n      }; \r\n     \r\n      case \"RESTORE_POKE\":\r\n        return{\r\n            ...state,\r\n            details: []\r\n        }\r\n    case \"GET_POKEMON\":\r\n      //             console.log(state.pokemons);\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        allPokemons: action.payload,\r\n      };\r\n    //arr.sort\r\n    case \"ORDER_ATTACK_POKE\":\r\n      let orderPoke;\r\n      // numbers mean positions\r\n      // 0 means they're equal\r\n      // we compare values --\r\n      switch (action.payload) {\r\n        case \"mayor\":\r\n          state.pokemons.sort(function (a, b) {\r\n            if (a.attack > b.attack) {\r\n              return -1;\r\n            }\r\n            if (b.attack > a.attack) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          });\r\n\r\n          break;\r\n        case \"menor\":\r\n          state.pokemons.sort(function (a, b) {\r\n            if (a.attack > b.attack) {\r\n              return 1;\r\n            }\r\n            if (b.attack > a.attack) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          });\r\n\r\n          break;\r\n\r\n        case \"ascendente\":\r\n          state.pokemons.sort(function (a, b) {\r\n            if (a.name > b.name) {\r\n              return 1;\r\n            }\r\n            if (b.name > a.name) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          });\r\n\r\n          break;\r\n        case \"descendente\":\r\n          state.pokemons.sort(function (a, b) {\r\n            if (a.name < b.name) {\r\n              return 1;\r\n            }\r\n            if (b.name < a.name) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","//seteamos los requerimientos de Redux\r\nimport {createStore, applyMiddleware, } from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducer';\r\n\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n// Store es como un centro de informacion alojado por fuera de los components. Permite que todos los componentes conozcan la info manejada. ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n\n  <Provider store={store}>\n       <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}